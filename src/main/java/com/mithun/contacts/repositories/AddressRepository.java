package com.mithun.contacts.repositories;

import com.mithun.contacts.entities.Address;

//Database access

public class AddressRepository extends Repository<Address>{

	public AddressRepository(){
		super(Address.class);
	}
	
//	//init will be called once
//	//responsible for db initialization
//	
//	//we will use JNDI to look up DataSource
//	
//	//we wont use dataSource anymore 
//	//because its too much of code
//	//instead we will use JPA
////	private final DataSource dataSource;
//	
//	private final EntityManager entityManager = Persistence.createEntityManagerFactory("training").createEntityManager();
//	
//	//we wont use this constructor because this will be handled by JPA hereon
////	public AddressRepository(){
////		try {
////			Context context = new InitialContext();
////			try{
////				dataSource = (DataSource) context.lookup("java:comp/env/jdbc/trainingdb");
////			}finally{
////				context.close();
////			}
////		} catch (NamingException e) {
////			// TODO Auto-generated catch block
////			throw new RuntimeException(e);
////		}
////	}
//	//will not be used
//	//wil use JPA henceforth
////	public void init() {
////		Connection connection = dataSource.getConnection();
////		try{
////			Statement statement = connection.createStatement();
////			try{
////				statement.execute("create table address (id integer generated by default as identity primary key, street varchar(20), city varchar(20), state varchar(20), zip varchar(20))");
////			}finally{
////				
////			}
////		}finally{
////			connection.close();
////		}
////	}
//	//delete  cos it will be handled by JPA
//	//delete all method defenition
//	//create and update will be merged to save()
//	public void create(Address address) {}
//	
//	public void update(Address address) {}
//	
//	public void save(Address address){
//		entityManager.merge(address);
//	}
//	
//	//removed connection creation, statement for execution, thows
//	//all this will be handled by single line of code
//	//JPA will handle thesame
//	public void delete(Address address) {
//		entityManager.remove(address);
//	}
//
//	//deleted all long code will be handled by JPA
//	//create class, connection, query etc
//	public Address find(long id) {
//		return entityManager.find(Address.class, id);
//	}
//	
//	
//	//unmarshaling will be handled by JPA
////	public static Address unmarshal(ResultSet resultSet) {
////		
////		//look at curent row of reslt set
////		// construct an address from the individual columns (starting at 1)
////		Address address = new Address();
////		address.setId(resultSet.getLong("id"));
////		address.setStreet(resultSet.getString("street"));
////		address.setCity(resultSet.getString("city"));
////		address.setState(resultSet.getString("state"));
////		address.setZip(resultSet.getString("zip"));
////		return address;
////	}
	
}
